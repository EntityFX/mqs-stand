version: "3.9"
services:
  mqs-influxdb:
    image: influxdb:2.7
    container_name: mqs-influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: superuser
      DOCKER_INFLUXDB_INIT_PASSWORD: Passw0rd!
      DOCKER_INFLUXDB_INIT_ORG: MyOrg
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: N3Z_uUDSQ61qVp93K5dNzH3rbNcKxtphDLrjfS_DcX2cdTr3nR2pOlixGCx6HQ8VI66nqnyztOlPFoWFXoe62Q==
      DOCKER_INFLUXDB_INIT_BUCKET: NBomber
    ports:
      - 8086:8086
    networks:
      - mqs-infra
    volumes:
    - mqs-influxdb-data:/var/lib/influxdb2

  mqs-grafana:
    image: grafana/grafana-oss:9.5.3
    container_name: mqs-grafana
    ports:
      - 3000:3000
    networks:
      - mqs-infra
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning

  mqs-node-red:
    image: nodered/node-red:latest
    container_name: mqs-node-red
    environment:
      - TZ=Europe/Moscow
    ports:
      - "1880:1880"
    networks:
      - mqs-infra
    volumes:
      - mqs-node-red-data:/data

  mqs-prometheus:
    image: prom/prometheus:latest
    container_name: mqs-prometheus
    volumes:
      - ./mqs-prometheus:/etc/prometheus/
    hostname: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - mqs-infra


volumes:
  mqs-node-red-data:
  mqs-influxdb-data:

networks:
  mqs-net: null